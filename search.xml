<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>webgl相关技术记录</title>
      <link href="/2020/04/06/webgl-xiang-guan-ji-zhu-ji-lu/"/>
      <url>/2020/04/06/webgl-xiang-guan-ji-zhu-ji-lu/</url>
      
        <content type="html"><![CDATA[<script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>基于nestjs的API后端-algdb公式网站数据缓存</title>
      <link href="/2020/03/28/ji-yu-nestjs-de-api-hou-duan-algdb-gong-shi-wang-zhan-shu-ju-huan-cun/"/>
      <url>/2020/03/28/ji-yu-nestjs-de-api-hou-duan-algdb-gong-shi-wang-zhan-shu-ju-huan-cun/</url>
      
        <content type="html"><![CDATA[<h1 id="Algdb数据的国内备份"><a href="#Algdb数据的国内备份" class="headerlink" title="Algdb数据的国内备份"></a>Algdb数据的国内备份</h1><h2 id="解决国内访问algdb缓慢的问题，每日更新，数据格式与algdb保持一致"><a href="#解决国内访问algdb缓慢的问题，每日更新，数据格式与algdb保持一致" class="headerlink" title="解决国内访问algdb缓慢的问题，每日更新，数据格式与algdb保持一致"></a>解决国内访问algdb缓慢的问题，每日更新，数据格式与algdb保持一致</h2><h2 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h2><ol><li>typescript</li><li>nestjs</li><li>mongodb</li><li>swagger</li></ol><h2 id="使用TS语言开发的纯API后端"><a href="#使用TS语言开发的纯API后端" class="headerlink" title="使用TS语言开发的纯API后端"></a>使用TS语言开发的纯API后端</h2><ul><li>使用了ts在vs code上有了很完善的类型提示</li><li>数据部分由python爬虫爬取</li><li>利用了nestjs集成的swagger自动生成了api文档页面<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200328010836.png" alt=""></li></ul><h2 id="技术细节记录"><a href="#技术细节记录" class="headerlink" title="技术细节记录"></a>技术细节记录</h2><p>主要使用了nestjs的nestjs-typegoose 和 @typegoose/typegoose 这两个包<br>typegoose取代了mongoose 编程风格更加组件化</p><ol><li>typegoose取代了mongoose<br>由于mongodb使用了账号密码，所以mongodb连接跟平时不一样<br>使用mongoose直接使用连接参数连接，mongod://user:name@localhost:port/dbname<br>使用@typegoose/typegoose<pre><code>let algconn =  mongoose.createconnection('mongodb://user:pwd@localhost:27017/test',{useNewUrlParser:true,useFindAndModify:false,useCreateIndex:true})</code></pre></li></ol><p>需要通过类来导入</p><pre><code>class Puzzle {    @prop()    public puzzle?:string}export const PuzzleModule = getModelForClass(Puzzle)</code></pre><p>查询文档得知模型参数也是通过修饰符来传入的<br><a href="https://typegoose.github.io/typegoose/docs/decorators/modelOptions/#Options" target="_blank" rel="noopener">文档说明</a><br>格式为<br>其中关于mongoose的参数schemaoptions可以配置下面的参数<br><a href="https://mongoosejs.com/docs/guide.html#options" target="_blank" rel="noopener">mongoose说明页面</a><br><img src="http://imagebed.solarsunrise.cn/blog/img/20200328013421.png" alt=""></p><pre><code>@modelOptions({     schemaOptions:{collection:'puzzles'}, })</code></pre><ol start="2"><li>使用更加nestjs风格的组件化开发方式，降低耦合  </li></ol><p>model文件中不使用getModelForClass<br><a href="https://www.npmjs.com/package/nestjs-typegoose" target="_blank" rel="noopener">Using Typegoose removes the need for having a Model interface.</a><br>步骤</p><ul><li>model.ts文件中仅仅生成模型类</li><li>module.ts中通过imports，注入TypegooseModule.forRoot()</li><li>module.ts通过TypegooseModule.forFeature([modelname])导出</li><li>controller.ts通过类的初始化constructor中通过injectmodel来引入<ul><li>@InjectModel(modelname) private readonly modelnameModel: ReturnModelType<typeof modelname=""></typeof></li><li>最后的使用都用InjectModel的 modelnameModel</li></ul></li></ul><ol start="3"><li>代码风格<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200328014624.png" alt=""><br><img src="http://imagebed.solarsunrise.cn/blog/img/20200328014504.png" alt=""></li></ol><hr><h1>algdb China</h1><p>algdb数据的国内缓存，解决国内访问algdb缓慢的问题，每日更新，数据格式与algdb保持一致</p><h3>接口文档</h3><li><a href="api-docs">/api-docs</a></li><h3>例子</h3><li><a href="algdb/puzzles">获取收录魔方种类/puzzles</a></li><li><a href="algdb/topcasegroups">获取热门case/topcasegroups</a></li><li><a href="algdb/stats">获取algdb网站统计/stats</a></li><li><a href="algdb/puzzleset">获取set公式集合列表/puzzleset</a></li><li><a href="algdb/puzzlesubset">获取subset子公式集列表/puzzlesubset</a></li><li><a href="algdb/puzzlesubset?set=vls">获取subset子公式集列表如vls/puzzlesubset?set=vls</a></li><li><a href="algdb/casegroup">获取casegroup列表/casegroup</a></li><li><a href="algdb/case">获取每个case的数据/case</a></li><li><a href="algdb/case?case=f2l1">获取f2l1数据/case?case=f2l1</a></li><h3>query参数</h3><p>大部分接口都支持分页操作</p><p>格式：algdb/name?size=50&amp;page=1</p><p>部分接口可以精确查询，具体可在文档中看到</p><h3>反馈</h3><a>hanzhaoapply@gmail.com</a><a target="_blank" href="https://github.com/kirahan" about="">github: kirahan</a><a target="_blank" href="https://kirahan.github.io">个人博客</a><h1>enjoy!</h1><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algdb </tag>
            
            <tag> 工具 </tag>
            
            <tag> 开发 </tag>
            
            <tag> typescript </tag>
            
            <tag> nestjs </tag>
            
            <tag> api开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新电脑安装配置总结</title>
      <link href="/2020/03/22/xin-dian-nao-an-zhuang-pei-zhi-zong-jie/"/>
      <url>/2020/03/22/xin-dian-nao-an-zhuang-pei-zhi-zong-jie/</url>
      
        <content type="html"><![CDATA[<h1 id="matebook14新电脑安装配置总结"><a href="#matebook14新电脑安装配置总结" class="headerlink" title="matebook14新电脑安装配置总结"></a>matebook14新电脑安装配置总结</h1><h2 id="常用软件"><a href="#常用软件" class="headerlink" title="常用软件"></a>常用软件</h2><ol><li>浏览器、chrome、edge、lanter<ol><li>edge登录、梯子、chrome登录</li></ol></li><li>7zip、搜狗输入法</li><li>potplayer、QQ、微信、百度网盘、网易云</li><li>obs、adobe全家桶<h2 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h2></li><li>git</li><li>python</li><li>nodejs<ol><li>安装npm淘宝源</li><li>设置prefix、cache目录</li><li>安装全局包如yarn、pm2、nodemon、electron、hexo</li><li>检查环境变量<ol><li>cmd支持</li><li>git bash支持</li><li>powershell支持</li></ol></li></ol></li><li>wsl、windows terminal</li><li>Vs code<ol><li>配置同步<ol><li>github登录认证</li><li>插件同步</li></ol></li><li>shh配置<ol><li>github更新</li><li>远程服务器ssh-remote配置 </li><li>开发文件导入</li></ol></li></ol></li><li>MongoDB<ol><li>下载</li><li>注册服务</li><li>启动服务</li></ol></li><li>XAMPP php集成环境</li><li>hexo博客工具测试</li><li>picgo图片上传工具配置<ol><li>设置阿里云oss配置文件</li></ol></li><li>微信开发者工具<h2 id="游戏"><a href="#游戏" class="headerlink" title="游戏"></a>游戏</h2></li><li>battle</li><li>暴雪游戏</li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 记录 </tag>
            
            <tag> 工具 </tag>
            
            <tag> 安装 </tag>
            
            <tag> win10 </tag>
            
            <tag> 日志 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>visualcube修改记录</title>
      <link href="/2020/03/13/visualcube-xiu-gai-ji-lu/"/>
      <url>/2020/03/13/visualcube-xiu-gai-ji-lu/</url>
      
        <content type="html"><![CDATA[<h1 id="visualcube的修改日志"><a href="#visualcube的修改日志" class="headerlink" title="visualcube的修改日志"></a>visualcube的修改日志</h1><h2 id="1-适配个人服务器"><a href="#1-适配个人服务器" class="headerlink" title="1.适配个人服务器"></a>1.适配个人服务器</h2><ul><li>修改visualcube.php 为 index.php</li><li>静态文件目录加了了前缀visualcube</li></ul><h2 id="2-修改了view为trans时候，白色底面显示的bug"><a href="#2-修改了view为trans时候，白色底面显示的bug" class="headerlink" title="2.修改了view为trans时候，白色底面显示的bug"></a>2.修改了view为trans时候，白色底面显示的bug</h2><p><a href="http://solarsunrise.cn/index.php?fmt=svg&amp;bg=t&amp;view=trans&amp;sch=ygrwbo&amp;r=y30x-30&amp;stage=cross&amp;size=500" target="_blank" rel="noopener">点我查看效果</a><br><img src="http://solarsunrise.cn/index.php?fmt=svg&amp;bg=t&amp;view=trans&amp;sch=ygrwbo&amp;r=y30x-30&amp;stage=cross&amp;size=500" alt></p><h2 id="3-fc、sch、fd可以使用数字代表参数重复-方便快速涂色"><a href="#3-fc、sch、fd可以使用数字代表参数重复-方便快速涂色" class="headerlink" title="3.fc、sch、fd可以使用数字代表参数重复,方便快速涂色"></a>3.fc、sch、fd可以使用数字代表参数重复,方便快速涂色</h2><p><code>&amp;fc=y10o20b30</code> <a href="http://solarsunrise.cn/index.php?fmt=svg&amp;size=500&amp;pzl=7&amp;fc=y10o20b30" target="_blank" rel="noopener">点我查看效果</a><br><img src="http://solarsunrise.cn/index.php?fmt=svg&amp;size=500&amp;pzl=7&amp;fc=y10o20b30" alt></p><p><code>&amp;sch=y2o2b2</code> <a href="http://solarsunrise.cn/index.php?fmt=svg&amp;size=500&amp;pzl=7&amp;sch=y2o2b2&amp;view=plan" target="_blank" rel="noopener">点我查看效果</a>  </p><p><img src="http://solarsunrise.cn/index.php?fmt=svg&amp;size=500&amp;pzl=7&amp;sch=y2o2b2&amp;view=plan" alt></p><h2 id="4-alg-和-case支持-括号表示重复"><a href="#4-alg-和-case支持-括号表示重复" class="headerlink" title="4.alg 和 case支持 括号表示重复"></a>4.alg 和 case支持 括号表示重复</h2><p><code>alg=(RUR'U')5</code> <a href="http://solarsunrise.cn/index.php?fmt=svg&amp;size=500&amp;pzl=3&amp;alg=(R%20UR%27U%27)5" target="_blank" rel="noopener">点我查看效果</a><br><img src="http://solarsunrise.cn/index.php?fmt=svg&amp;size=500&amp;pzl=3&amp;alg=(R%20UR%27U%27)5" alt></p><h2 id="5-alg-和-case-对高阶魔方的支持-中间单层-如-4R-4U"><a href="#5-alg-和-case-对高阶魔方的支持-中间单层-如-4R-4U" class="headerlink" title="5. alg 和 case 对高阶魔方的支持 中间单层 如 4R 4U"></a>5. alg 和 case 对高阶魔方的支持 中间单层 如 4R 4U</h2><p><code>&amp;alg= 4R 5U</code> 4R前面空格不能省略 <a href="http://solarsunrise.cn/index.php?fmt=svg&amp;size=500&amp;pzl=7&amp;alg=%204R%205U" target="_blank" rel="noopener">点我查看效果</a><br><img src="http://solarsunrise.cn/index.php?fmt=svg&amp;size=500&amp;pzl=7&amp;alg=%204R%205U" alt></p><h2 id="6-alg-和-case-对高阶魔方的支持-中间多层-如-3-4r-2-5u’-2-4f2"><a href="#6-alg-和-case-对高阶魔方的支持-中间多层-如-3-4r-2-5u’-2-4f2" class="headerlink" title="6. alg 和 case 对高阶魔方的支持 中间多层 如 3-4r 2-5u’ 2-4f2"></a>6. alg 和 case 对高阶魔方的支持 中间多层 如 3-4r 2-5u’ 2-4f2</h2><p><code>&amp;alg=3-4r 2-5u'</code> <a href="http://solarsunrise.cn/index.php?fmt=svg&amp;size=500&amp;pzl=7&amp;alg&amp;alg=alg=3-4r%202-5u%27" target="_blank" rel="noopener">点我查看效果</a><br><img src="http://solarsunrise.cn/index.php?fmt=svg&amp;size=500&amp;pzl=7&amp;alg&amp;alg=alg=3-4r%202-5u%27" alt></p><p><code>&amp;alg=2-4f2</code> <a href="http://solarsunrise.cn/index.php?fmt=svg&amp;size=500&amp;pzl=7&amp;alg&amp;alg=2-4f2" target="_blank" rel="noopener">点我查看效果</a><br><img src="http://solarsunrise.cn/index.php?fmt=svg&amp;size=500&amp;pzl=7&amp;alg&amp;alg=2-4f2" alt></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 魔方 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 魔方 </tag>
            
            <tag> 文档 </tag>
            
            <tag> visualcube </tag>
            
            <tag> 虚拟魔方 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>algdb网站API整理</title>
      <link href="/2020/03/09/algdb-wang-zhan-api-zheng-li/"/>
      <url>/2020/03/09/algdb-wang-zhan-api-zheng-li/</url>
      
        <content type="html"><![CDATA[<h1 id="algdb网站API整理"><a href="#algdb网站API整理" class="headerlink" title="algdb网站API整理"></a>algdb网站API整理</h1><p><strong>不知道algdb网站是不是开源的，不过<a href="http://algdb.net/" target="_blank" rel="noopener">algdb官网</a>上的数据接口是开放的，也比较简单，不需要登录即可请求，所以这里也做一个简单的整理</strong></p><h2 id="0-调试工具"><a href="#0-调试工具" class="headerlink" title="0.调试工具"></a>0.调试工具</h2><ul><li>chrome浏览器的开发者工具</li><li>postman用来模拟服务器请求</li><li>备注根地址：<code>http://cubiclealgdbserver.azurewebsites.net/</code><h2 id="1-主要接口"><a href="#1-主要接口" class="headerlink" title="1.主要接口"></a>1.主要接口</h2></li></ul><ol><li>返回puzzle列表 <code>puzzles</code></li><li>返回热门公式集   <code>topCaseGroups</code></li><li>返回网站公式数据 <code>stats</code></li><li>返回具体分类下的公式集 <code>content/caseGroup/EventName/CaseSetName</code><ol><li>二阶目录下有 cll、eg1、eg2、ortegaoll、ortegapbl</li><li>三阶目录下有12个分别是 [cmll,coll,ell,f2l,oholl,ohpll,oll,ollcp.pll,vls,wv,zbll] </li><li>sq1目录下有1个目录 ep，ep下级还有10个目录</li></ol></li></ol><h2 id="注意有的分类下还有多级目录，具体可以通过-hasChildren这个字段来判断"><a href="#注意有的分类下还有多级目录，具体可以通过-hasChildren这个字段来判断" class="headerlink" title="注意有的分类下还有多级目录，具体可以通过 hasChildren这个字段来判断"></a>注意有的分类下还有多级目录，具体可以通过 hasChildren这个字段来判断</h2><h2 id="2-返回值展示"><a href="#2-返回值展示" class="headerlink" title="2.返回值展示"></a>2.返回值展示</h2><ul><li>GET请求<code>user/content/puzzles</code> 返回puzzles列表  目前有3大类 222，333，sq1<br>返回值如下<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200309214305.png" alt=""></li><li>GET请求<code>user/topCaseGroups</code> 返回目前最热门的公式集  这个数据格式非常简单，字段也很少<br>返回值如下<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200309214537.png" alt=""></li><li>GET请求<code>user/stats</code> 返回目前网站的公式数据3个数据，分别是alg数量、case情况数、user用户数<br>返回值如下 6056algs 1592cases 5115users<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200309214750.png" alt=""></li><li>GET请求<code>user/content/puzzle/222</code> 返回二阶魔方的公式集分类<br>返回值如下 数据包括了二阶项目下的分类以及每个分类的图片<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200309215428.png" alt=""></li><li><code>user/content/caseGroup/222/cll</code> 返回二阶cll下的所有公式<br>返回值如下，字段包括名字、解法、图片<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200309215619.png" alt=""></li><li><code>user/content/caseGroup/222/eg1</code> 返回二阶eg1下的所有公式<br>返回值如下<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200309215919.png" alt=""></li><li>GET请求<code>user/content/puzzle/333</code> 返回三阶目录下的公式集分类<br>返回值如下<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200309221002.png" alt=""></li><li>GET请求<code>user/content/caseGroup/333/f2l</code>返回三阶f2l下的所有公式<br>返回值如下<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200309221113.png" alt=""></li><li>GET请求<code>user/content/puzzle/sq1</code> 返回sq1目录下所有公式集分类<br>返回值如下<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200309221222.png" alt=""></li><li>GET请求<code>user/content/caseGroup/sq1/solvedu</code> 返回sq1 ep中 -on U下所有公式<br>返回值如下<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200309221412.png" alt=""></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 采坑 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> API接口 </tag>
            
            <tag> 魔方 </tag>
            
            <tag> 文档 </tag>
            
            <tag> algdb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WCA官方API详解</title>
      <link href="/2020/02/29/wca-guan-fang-api-xiang-jie/"/>
      <url>/2020/02/29/wca-guan-fang-api-xiang-jie/</url>
      
        <content type="html"><![CDATA[<h1 id="WCA官方API详解"><a href="#WCA官方API详解" class="headerlink" title="WCA官方API详解"></a>WCA官方API详解</h1><p><strong>WCA是有提供API接口的，但没能在<a href="https://www.worldcubeassociation.org/" target="_blank" rel="noopener">WCA官网</a>上找到具体的接口文档，也没有发现有谁已经整理过了，所以这里做一个简单的梳理</strong></p><h2 id="0-授权登录"><a href="#0-授权登录" class="headerlink" title="0. 授权登录"></a>0. 授权登录</h2><p>wca的接口都是需要授权之后才可以发送请求的，使用的是标准的Oauth2.0，稍后会写一篇文档记录如何做授权登录 </p><h2 id="1-参考链接"><a href="#1-参考链接" class="headerlink" title="1. 参考链接"></a>1. 参考链接</h2><p>WCA官网是用哪个ruby写的，完全看不懂，所以检索了一下<a href="https://github.com/thewca/worldcubeassociation.org" target="_blank" rel="noopener">WCA的源代码</a>，找到几个关键文件：</p><ul><li><a href="https://github.com/thewca/worldcubeassociation.org/blob/master/WcaOnRails/config/routes.rb" target="_blank" rel="noopener">全部路由表</a> 这里定义了所有路由，从中可以找到所有的api接口，不过没有带参数说明</li><li><a href="https://github.com/thewca/worldcubeassociation.org/blob/2f2a1b591a64fcef5cfb5ad7e0ee01a1e61f4e21/WcaOnRails/app/controllers/api/v0" target="_blank" rel="noopener">API部分的controller</a> 包括api部分以及person，地理位置geocoding和competition</li><li><a href="https://github.com/thewca/worldcubeassociation.org/tree/2f2a1b591a64fcef5cfb5ad7e0ee01a1e61f4e21/WcaOnRails/app/controllers" target="_blank" rel="noopener">全部controller</a> 部分接口不在api/v0中的，可以从全部的controller中找到</li><li><a href="https://github.com/thewca/worldcubeassociation.org/blob/7f13c6f67c8187c0f0b5c94cbac633d2c2564b01/WcaOnRails/spec/controllers/api_controller_spec.rb" target="_blank" rel="noopener">API的spec文件</a>ruby的spec好像类似于node中的test文件，属于测试文件，其中有一些用例，也有一些参数说明，这个文件帮助很大，避免了进一步去看源码了</li><li><a href="https://github.com/thewca/worldcubeassociation.org/blob/7f13c6f67c8187c0f0b5c94cbac633d2c2564b01/WcaOnRails/spec/controllers/api_competitions_controller_spec.rb" target="_blank" rel="noopener">比赛相关的spec文件</a> 包含了赛事相关的接口用例</li><li><a href="https://github.com/thewca/worldcubeassociation.org/blob/7f13c6f67c8187c0f0b5c94cbac633d2c2564b01/WcaOnRails/spec/controllers/persons_controller_spec.rb" target="_blank" rel="noopener">Person相关的sepc文件</a> 包含了person模块的接口用例</li></ul><h2 id="2-主要接口"><a href="#2-主要接口" class="headerlink" title="2. 主要接口"></a>2. 主要接口</h2><ul><li><p><code>/me</code>  返回授权登录的用户信息【不需要传参】<br>返回值如下<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200229131601.png" alt></p></li><li><p><code>export_public</code> 下载数据库</p></li><li><p><code>scramble-program</code> 获取打乱程序信息<br>返回值如下<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200229132354.png" alt></p></li><li><p><code>search</code> 模糊查询接口,可以查询 competition、user、regulation<br>返回的可以是比赛也可以是人</p></li><li><p><code>/search/posts</code> 查询推送接口,<strong>[有参数][必须]</strong> <code>{q : "post's title or body"}</code> 优先搜索标题，其次搜索正文<br>返回值如下<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200229134734.png" alt></p></li><li><p><code>/search/competitions</code> 搜索比赛接口，<strong>[有参数][必须]</strong> <code>{q : "competition"}</code><br>返回值如下<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200229135311.png" alt><br>返回值中有很多有用参数：名字、id、时间、地理位置、地址、代表、主办方、项目</p></li><li><p><code>/search/users</code> 搜索选手接口，<strong>[有参数][必须]</strong> 一共有四种格式<br><code>{q : "usersname" or "wcaid"}</code>  一般情况只需要传字段q<br><code>{q : "emailaddress" , email:true}</code>  通过邮件地址搜索用户<br><code>{q : "usersname" or "wcaid" , persons_table : true or false}</code> 增加了persons_table，<a href="https://github.com/thewca/worldcubeassociation.org/blob/7f13c6f67c8187c0f0b5c94cbac633d2c2564b01/WcaOnRails/spec/controllers/api_controller_spec.rb#L108" target="_blank" rel="noopener">原文描述</a>是：</p><blockquote><p>Person without User</p></blockquote><p>  应该是那种有wcaid的用户吧<br><code>{q : "usersname" or "wcaid", include_dummy_accounts: true or false}</code> 增加了 include_dummy_accounts字段，dummy意思是假的，可能也是一种特殊的用户类型吧<br>返回值格式都一致<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200229150346.png" alt></p></li><li><p><code>/search/regulations</code> 搜索比赛规则 <strong>[有参数][必须]</strong> <code>{q : "title"}</code> 可以检索标号和关键字<br>返回值如下<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200229150945.png" alt></p></li><li><p><code>/users/:id</code> 获得用户资料   <strong>[无参数]</strong> id直接通过/:id的params形式传入，用于获取user资料<br>返回值如下<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200229151854.png" alt></p></li><li><p><code>/users/:wca_id</code> 获取用户资料  <strong>[无参数]</strong> wcaid直接通过/:wca_id的params形式传入，用于获取user资料<br>返回值如下</p><p><img src="http://imagebed.solarsunrise.cn/blog/img/20200229151854.png" alt></p></li><li><p><code>/delegates</code> 获取wca代表信息  <strong>[无参数]</strong><br>返回值如下</p><p><img src="http://imagebed.solarsunrise.cn/blog/img/20200229152906.png" alt></p></li><li><p><code>/persons</code> 获取选手的比赛详情 <strong><em>区别于users和search接口中的选手资料，proson接口获取的是比赛成绩相关数据</em></strong> <strong>[有参数][可选]</strong>  有几种参数可以定义</p><ol><li>不含参数，会按照wcaid的先后返回数据</li><li><code>params: { q: "name"}</code> 包含一个search字段，可以是名字也可以是wcaid</li><li><code>params: { wca_ids: "wcaid1,wcaid2,wcaid3" }</code> 通过wcaid查询，可以是一个id也可以是多个id 用per_page=来控制个数<br>返回值如下<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200229160640.png" alt></li></ol></li><li><p><code>/persons/:wca_id</code> 获取选手的比赛详情直接将wcaid填入url中 <strong>[无参数]</strong><br>返回值如下<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200229160930.png" alt></p></li><li><p><code>/persons/:wca_id/results</code> 按照选手参加的赛事排序返回选手成绩 <strong>[无参数]</strong><br>返回值如下<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200229161211.png" alt></p></li><li><p><code>/geocoding/search</code>  搜索地理位置 没看出来应该填什么参数</p><pre><code>  query_params = {    address: params.require(:q),    key: ENVied.GOOGLE_MAPS_API_KEY,  }  render json: JSON.parse(RestClient.get(GMAPS_GEOCODING_URL, params: query_params).body)</code></pre></li><li><p><code>/records</code> 获取所有记录，包括世界、大洲、国家 <strong>[无参数]</strong>  但是只有成绩，没有选手信息<br>返回值如下<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200229162251.png" alt></p><h2 id="3-赛事管理相关接口"><a href="#3-赛事管理相关接口" class="headerlink" title="3.赛事管理相关接口"></a>3.赛事管理相关接口</h2><p>api中有很多管理赛事的子接口，所以单独列出</p></li><li><p><code>/competitions/:competition_id</code> 获取比赛信息，直接将competition_id如：WuhanAutumn2019 填入url中 <strong>[无参数]</strong><br>返回值如下<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200229164410.png" alt></p></li><li><p><code>/competitions/:competition_id/results</code> 获取比赛成绩 <strong>[无参数]</strong><br>返回值如下<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200229165314.png" alt></p></li><li><p><code>/competitions/:competition_id/competitors</code>获取比赛选手名单 <strong>[无参数]</strong><br>返回值如下<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200229165238.png" alt></p></li><li><p><code>/competitions/:competition_id/registrations</code>获取比赛报名名单 <strong>[无参数]</strong><br>返回值如下<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200229165522.png" alt></p></li><li><p><code>/competitions/:competition_id/schedule</code>获取比赛赛程明细 <strong>[无参数]</strong><br>返回值如下<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200229165157.png" alt></p></li><li><p><code>/competitions/:competition_id/wcif</code>获取wcif信息，需要赛事管理员权限，后续补充</p></li><li><p><code>/competitions/:competition_id/wcif/public</code>获取wcif公开信息 <strong>[无参数]</strong><br>返回值如下<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200229165737.png" alt></p></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> WCA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WCA </tag>
            
            <tag> API接口 </tag>
            
            <tag> 魔方 </tag>
            
            <tag> 文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Alfred-workflow开发排坑记录1</title>
      <link href="/2020/02/29/alfred-workflow-kai-fa-pai-keng-ji-lu-1/"/>
      <url>/2020/02/29/alfred-workflow-kai-fa-pai-keng-ji-lu-1/</url>
      
        <content type="html"><![CDATA[<h1 id="采坑记录"><a href="#采坑记录" class="headerlink" title="采坑记录"></a>采坑记录</h1><h2 id="一句话总结，建议直接看官方文档，网上的教程都不清晰，也不是最新的，很多都失效了，官方文档的说明还是很全面的。"><a href="#一句话总结，建议直接看官方文档，网上的教程都不清晰，也不是最新的，很多都失效了，官方文档的说明还是很全面的。" class="headerlink" title="一句话总结，建议直接看官方文档，网上的教程都不清晰，也不是最新的，很多都失效了，官方文档的说明还是很全面的。"></a>一句话总结，建议直接看官方文档，网上的教程都不清晰，也不是最新的，很多都失效了，官方文档的说明还是很全面的。</h2><p><img src="http://imagebed.solarsunrise.cn/blog/img/20200229004634.png" alt=""><br><a href="https://www.alfredapp.com/help/workflows/" target="_blank" rel="noopener">官方说明</a></p><ol><li>不要用python来开发，python只支持python2，不支持python3</li><li>搜索列表呈现主要选用插件     <code>ScriptFilter</code></li><li>使用nodejs，读取环境变量为<code>process.env</code>,但是只能读不能写</li><li>另外只有通过workflow启动的js脚本能读取出process.env</li><li>读取输入参数用 <code>process.argv[xx]</code></li><li>呈现ScriptFilter使用console.log() json数据接口即可，不能增加其他的console.log() 否则会出错    <code>反人类</code></li><li>ScriptFilter中icon配置项，文档中的icon.type = ‘filetype’ 是指填入具体的图片格式如 <code>png，jpg</code>等，而不是直接写filetype， <code>巨坑</code></li><li>ScriptFilter数据结构中有很多有用的参数，如自动全autocomplete，valid，甚至可以给每个item设置变量，非常强大</li><li>ScriptFilter不能用定时函数，直接用json文件中的<code>rerun</code>参数即可</li><li>插件中还有一个JSON Utility的模块，非常强大，还没来得及研究</li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 采坑 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个人工具 </tag>
            
            <tag> MAC </tag>
            
            <tag> alfred </tag>
            
            <tag> 采坑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac神器Alfred配置分享</title>
      <link href="/2020/02/23/mac-shen-qi-alfred-pei-zhi-fen-xiang/"/>
      <url>/2020/02/23/mac-shen-qi-alfred-pei-zhi-fen-xiang/</url>
      
        <content type="html"><![CDATA[<h1 id="Mac神器Alfred配置分享"><a href="#Mac神器Alfred配置分享" class="headerlink" title="Mac神器Alfred配置分享"></a>Mac神器Alfred配置分享</h1><p><img src="http://imagebed.solarsunrise.cn/blog/img/20200223014813.png" alt=""></p><h2 id="web-search配置"><a href="#web-search配置" class="headerlink" title="web search配置"></a>web search配置</h2><h2 id="terminal-配置"><a href="#terminal-配置" class="headerlink" title="terminal 配置"></a>terminal 配置</h2><h2 id="workflow分享"><a href="#workflow分享" class="headerlink" title="workflow分享"></a>workflow分享</h2><h2 id="workflow自制"><a href="#workflow自制" class="headerlink" title="workflow自制"></a>workflow自制</h2><ol><li>放弃Python（因为只支持Python2）</li><li>使用shell</li><li>使用Nodejs</li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Alfred </tag>
            
            <tag> 笔记 </tag>
            
            <tag> 生产力 </tag>
            
            <tag> 系统插件 </tag>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>配置host文件解决GitHub上图片无法加载的问题</title>
      <link href="/2020/02/22/pei-zhi-host-wen-jian-jie-jue-github-shang-tu-pian-wu-fa-jia-zai-de-wen-ti/"/>
      <url>/2020/02/22/pei-zhi-host-wen-jian-jie-jue-github-shang-tu-pian-wu-fa-jia-zai-de-wen-ti/</url>
      
        <content type="html"><![CDATA[<h1 id="配置host文件解决GitHub上图片无法加载的问题"><a href="#配置host文件解决GitHub上图片无法加载的问题" class="headerlink" title="配置host文件解决GitHub上图片无法加载的问题"></a>配置host文件解决GitHub上图片无法加载的问题</h1><p>最近在登录github网站的时候，发现很多仓库的图片没法加载或者加载速度很慢，加上梯子也不太稳定，所以配置了一下github的hosts，可以加快域名解析<br><a href="https://www.jianshu.com/p/25e5e07b2464" target="_blank" rel="noopener">类似情况</a></p><ol><li>Mac终端输入<br><code>sudo vi /etc/hosts</code></li><li>输入密码后，点击 i键，进入Insert模式，将下面内容拷贝进去<br>```<h1 id="GitHub-Start"><a href="#GitHub-Start" class="headerlink" title="GitHub Start"></a>GitHub Start</h1></li><li>30.253.112    github.com</li><li>30.253.119    gist.github.com</li><li>232.28.133    assets-cdn.github.com</li><li>232.28.133    raw.githubusercontent.com</li><li>232.28.133    gist.githubusercontent.com</li><li>232.28.133    cloud.githubusercontent.com</li><li>232.28.133    camo.githubusercontent.com</li><li>232.28.133    avatars0.githubusercontent.com</li><li>232.28.133    avatars1.githubusercontent.com</li><li>232.28.133    avatars2.githubusercontent.com</li><li>232.28.133    avatars3.githubusercontent.com</li><li>232.28.133    avatars4.githubusercontent.com</li><li>232.28.133    avatars5.githubusercontent.com</li><li>232.28.133    avatars6.githubusercontent.com</li><li>232.28.133    avatars7.githubusercontent.com</li><li>232.28.133    avatars8.githubusercontent.com<h1 id="GitHub-End"><a href="#GitHub-End" class="headerlink" title="GitHub End"></a>GitHub End</h1>```</li><li><code>wq</code> 保存退出即可</li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 采坑 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 采坑 </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用阿里云OSS作为个人图床</title>
      <link href="/2020/02/21/shi-yong-a-li-yun-oss-zuo-wei-ge-ren-tu-chuang/"/>
      <url>/2020/02/21/shi-yong-a-li-yun-oss-zuo-wei-ge-ren-tu-chuang/</url>
      
        <content type="html"><![CDATA[<h1 id="使用阿里云OSS作为个人图床"><a href="#使用阿里云OSS作为个人图床" class="headerlink" title="使用阿里云OSS作为个人图床"></a>使用阿里云OSS作为个人图床</h1><p>使用<strong>Markdown</strong>写博客的时候，有时候会需要插入图片，markdown一般都是插入的本地图片，所以当要分享到网络上，或者上传的github上的时候会失效，解决方法一般是先将本地图片上传到图床上面。</p><p>果是到网页上传，再复制得到图片地址，过程会比较繁琐，好在已经有大神开发出了专门的可视化工具来简化操作——<a href="https://molunerfinn.com/PicGo/" target="_blank" rel="noopener">PicGo</a>，非常好用。本文就是使用阿里云OSS配合PicGo实现图片秒传的体验。</p><h2 id="PicGo界面"><a href="#PicGo界面" class="headerlink" title="PicGo界面"></a>PicGo界面</h2><p><img src="https://cdn.jsdelivr.net/gh/Molunerfinn/test/picgo-site/first.png" alt="picgo界面"></p><h2 id="PicGo支持的图床（还可以通过插件自定义图床）"><a href="#PicGo支持的图床（还可以通过插件自定义图床）" class="headerlink" title="PicGo支持的图床（还可以通过插件自定义图床）"></a>PicGo支持的图床（还可以通过插件自定义图床）</h2><ul><li>SM.MS</li><li><a href="https://cloud.tencent.com/" target="_blank" rel="noopener">腾讯云</a></li><li>微博</li><li><a href="https://www.jianshu.com/p/2756724a5dee" target="_blank" rel="noopener">Github</a></li><li><a href="https://www.qiniu.com/" target="_blank" rel="noopener">七牛</a></li><li><a href="http://www.imgur.com/" target="_blank" rel="noopener">Imgur</a></li><li><a href="https://github.com/PicGo/Awesome-PicGo" target="_blank" rel="noopener">阿里云</a></li><li><a href="https://www.upyun.com/" target="_blank" rel="noopener">又拍云</a></li></ul><blockquote><p>PicGo的相关插件合集 <a href="https://github.com/PicGo/Awesome-PicGo" target="_blank" rel="noopener">Awesome-PicGo</a></p></blockquote><hr><h2 id="使用阿里云OSS作为图床"><a href="#使用阿里云OSS作为图床" class="headerlink" title="使用阿里云OSS作为图床"></a>使用阿里云OSS作为图床</h2><p>先来看看PicGo中阿里云OSS的配置项<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200221233839.png" alt=""><br>通过下面四步我们就可以获得上面这些配置信息</p><ol><li>注册和购买阿里云OSS服务</li><li>新建OSS中的bucket</li><li>获取KeyID和KeySecret</li><li>配置私有域名</li></ol><h3 id="注册和购买阿里云OSS服务"><a href="#注册和购买阿里云OSS服务" class="headerlink" title="注册和购买阿里云OSS服务"></a>注册和购买阿里云OSS服务</h3><h4 id="1-购买阿里OSS"><a href="#1-购买阿里OSS" class="headerlink" title="1. 购买阿里OSS"></a>1. 购买阿里OSS</h4><p>   OSS服务其实很便宜，一年也才几块钱，建议开发者都可以买一个<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200221220754.png" alt=""></p><h4 id="2-新建OSS中的bucket"><a href="#2-新建OSS中的bucket" class="headerlink" title="2. 新建OSS中的bucket"></a>2. 新建OSS中的bucket</h4><p>   bucket相当于是一个一个独立的容器，所以一般一个应用设置一个bucket，比如这里专门建立一个bucket作为图床</p><p><strong>新建bucket</strong><br>bucket名字自己设置，类型选择标准，一定不能错的是读写权限：<strong><em>公共读</em></strong><br>即只有你可以上传文件，其他人仅可以访问和读取<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200221233217.png" alt=""></p><h4 id="3-获取KeyID和KeySecret"><a href="#3-获取KeyID和KeySecret" class="headerlink" title="3. 获取KeyID和KeySecret"></a>3. 获取KeyID和KeySecret</h4><p>   通过key和secret来做身份认证，也就是要填入PicGo中的关键参数，这里需要强调的是，从风险规避的角度，务必在阿里云中应该申请子用户AccessKey，通过子用户赋予这个keyid仅仅操作OSS的权限而不是完整权限的key<br>   <img src="http://imagebed.solarsunrise.cn/blog/img/20200221234114.png" alt=""></p><hr><p><img src="http://imagebed.solarsunrise.cn/blog/img/20200221233839.png" alt="">  </p><blockquote><ul><li>第一项、第二项为第3步生成的keyid和keysecret  </li><li>第三项就是你创建的bucket名称  </li><li>第四项是OSS的存储区域，类似于使用的那个节点，结构一般都是<em>oss-cn-城市</em> 在bucket页面中可以找到</li></ul></blockquote><p>前四项填好之后OSS图床其实已经可以工作了，我们上传一张图片：<br>图片拖动到顶部PicGo图标，等待片刻图片地址以及markdown就会自动放入剪切板，粘贴使用即可<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200221235708.png" alt=""></p><p>剪贴板中信息大概如下：</p><pre><code>![](http://kirahan-blog-photobed.oss-cn-beijing.aliyuncs.com/blog/img/20200221235708.png)</code></pre><h1 id="坑："><a href="#坑：" class="headerlink" title="坑："></a>坑：</h1><p>此时通过图片URL访问，会发现图片无法预览，在浏览器打开图片url会自动下载<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200222000606.png" alt=""><br>出现这种问题不是设置的问题，而是阿里云做的限制<a href="https://help.aliyun.com/document_detail/142631.html" target="_blank" rel="noopener">说明文件</a>，解决方案是配置私有域名</p><blockquote><p>对于图片文件（在未修改文件http头的情况下）：<br>若您的Bucket是2019年9月23日前创建的，使用OSS默认访问域名或自有域名生成的文件URL从浏览器访问时可以预览文件内容。<br>若您的Bucket是2019年9月23日后创建的，使用OSS默认域名生成的文件URL从浏览器访问时会以附件形式下载；使用自有域名生成的文件URL访问时，可以预览文件内容。绑定自有域名步骤请参见绑定自定义域名。<br><a href="https://help.aliyun.com/document_detail/142631.html" target="_blank" rel="noopener">https://help.aliyun.com/document_detail/142631.html</a></p></blockquote><h4 id="4-配置私有域名"><a href="#4-配置私有域名" class="headerlink" title="4. 配置私有域名"></a>4. <a href="https://help.aliyun.com/document_detail/31902.html?spm=a2c4g.11186623.2.11.55207119cNLRuT#concept-ozw-m2r-5fb" target="_blank" rel="noopener">配置私有域名</a></h4><p>绑定自定义域名的前提条件</p><ul><li><input checked="" disabled="" type="checkbox"> 拥有个人域名</li><li><input disabled="" type="checkbox"> 域名已经备案</li></ul><p>配置步骤：</p><ol><li>进入目标Bucket，打开域名管理页签</li><li>单击传输管理 &gt; 域名管理</li><li>在绑定用户域名对话框配置以下参数<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200222001822.png" alt=""></li><li>在域名解析控制台添加对应的解析记录<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200222002012.png" alt=""></li><li>不要忘了在PicGo中填上你的私人域名，这样剪切板中的链接就会变成域名开头的<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200221233839.png" alt=""> </li></ol><hr><p>最后大功告成！可以愉快的写博客了<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200222002455.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个人工具 </tag>
            
            <tag> 采坑 </tag>
            
            <tag> 笔记 </tag>
            
            <tag> 图床 </tag>
            
            <tag> 阿里OSS </tag>
            
            <tag> PicGo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown 语法备忘</title>
      <link href="/2020/02/21/markdown-yu-fa-bei-wang/"/>
      <url>/2020/02/21/markdown-yu-fa-bei-wang/</url>
      
        <content type="html"><![CDATA[<h1 id="一、标题"><a href="#一、标题" class="headerlink" title="一、标题"></a>一、标题</h1><pre><code># 这是一级标题## 这是二级标题### 这是三级标题#### 这是四级标题##### 这是五级标题###### 这是六级标题</code></pre><h1 id="这是一级标题"><a href="#这是一级标题" class="headerlink" title="这是一级标题"></a>这是一级标题</h1><h2 id="这是二级标题"><a href="#这是二级标题" class="headerlink" title="这是二级标题"></a>这是二级标题</h2><h3 id="这是三级标题"><a href="#这是三级标题" class="headerlink" title="这是三级标题"></a>这是三级标题</h3><h4 id="这是四级标题"><a href="#这是四级标题" class="headerlink" title="这是四级标题"></a>这是四级标题</h4><h5 id="这是五级标题"><a href="#这是五级标题" class="headerlink" title="这是五级标题"></a>这是五级标题</h5><h6 id="这是六级标题"><a href="#这是六级标题" class="headerlink" title="这是六级标题"></a>这是六级标题</h6><h1 id="二、字体"><a href="#二、字体" class="headerlink" title="二、字体"></a>二、字体</h1><pre><code>**这是加粗的文字***这是倾斜的文字*`***这是斜体加粗的文字***~~这是加删除线的文字~~</code></pre><p><strong>这是加粗的文字</strong><br><em>这是倾斜的文字</em>`<br><strong><em>这是斜体加粗的文字</em></strong><br><del>这是加删除线的文字</del>  </p><h1 id="三、引用"><a href="#三、引用" class="headerlink" title="三、引用"></a>三、引用</h1><pre><code>&gt;这是引用的内容&gt;&gt;这是引用的内容&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;这是引用的内容</code></pre><blockquote><p>这是引用的内容</p><blockquote><p>这是引用的内容</p><blockquote><blockquote><p>这是引用的内容</p></blockquote></blockquote></blockquote></blockquote><h1 id="四、分割线"><a href="#四、分割线" class="headerlink" title="四、分割线"></a>四、分割线</h1><pre><code>---***</code></pre><hr><hr><h1 id="四、链接、列表-、图片等"><a href="#四、链接、列表-、图片等" class="headerlink" title="四、链接、列表 、图片等"></a>四、链接、列表 、图片等</h1><h3 id="link"><a href="#link" class="headerlink" title="link"></a>link</h3><pre><code>[超链接名](超链接地址 "超链接title")title可加可不加</code></pre><p><a href="www.baidu.com">百度</a>  </p><p>参考式</p><pre><code>我经常去的几个网站[GitHub][1]、[知乎][2]以及[简书][3][简书][3]是一个不错的[写作社区][]。[1]:https://github.com "GitHub"[2]:https://www.zhihu.com "知乎"[3]:http://www.jianshu.com "简书"[写作社区]:http://www.jianshu.com</code></pre><p>我经常去的几个网站<a href="https://github.com" target="_blank" rel="noopener" title="GitHub">GitHub</a>、<a href="https://www.zhihu.com" target="_blank" rel="noopener" title="知乎">知乎</a>以及<a href="http://www.jianshu.com" target="_blank" rel="noopener" title="简书">简书</a><br><a href="http://www.jianshu.com" target="_blank" rel="noopener" title="简书">简书</a>是一个不错的<a href="http://www.jianshu.com" target="_blank" rel="noopener">写作社区</a>。</p><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><pre><code> ![图片Alt](图片地址 "图片Title")![](https://kirahan-blog-photobed.oss-cn-beijing.aliyuncs.com/blog/img/赵晗-183.jpg) 参考式 在文档要插入图片的地方写![图片Alt][标记] 在文档的最后写上[标记]:图片地址 "Title"</code></pre><p><img src="http://imagebed.solarsunrise.cn/blog/img/timg.jpeg" alt=""></p><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><pre><code>- 列表内容+ 列表内容* 列表内容注意：- + * 跟内容之间都要有一个空格</code></pre><ul><li>你好</li><li>你好不好</li><li>你是不是真的好</li></ul><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><pre><code>1.列表内容2.列表内容3.列表内容注意：序号跟内容之间要有空格</code></pre><ol><li>多福多寿</li><li>房价快速的减肥</li><li>划分为UI偶然间可</li></ol><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><pre><code>姓名|技能|排行--|:--:|--:刘备|哭|大哥关羽|打|二哥张飞|骂|三弟</code></pre><table><thead><tr><th>姓名</th><th align="center">技能</th><th align="right">排行</th></tr></thead><tbody><tr><td>刘备</td><td align="center">哭</td><td align="right">大哥</td></tr><tr><td>关羽</td><td align="center">打</td><td align="right">二哥</td></tr><tr><td>张飞</td><td align="center">骂</td><td align="right">三弟</td></tr></tbody></table><h3 id="code"><a href="#code" class="headerlink" title="code"></a>code</h3><pre><code>`code`</code></pre><pre><code>    ```        code    ```</code></pre><h3 id="todo-list"><a href="#todo-list" class="headerlink" title="todo list"></a>todo list</h3><pre><code>近期任务安排:- [x] 整理Markdown手册- [ ] 改善项目   - [x] 优化首页显示方式   - [x] 修复闪退问题   - [ ] 修复视频卡顿- [ ] A3项目修复   - [x] 修复数值错误</code></pre><p>近期任务安排:</p><ul><li><input checked="" disabled="" type="checkbox"> 整理Markdown手册</li><li><input disabled="" type="checkbox"> 改善项目<ul><li><input checked="" disabled="" type="checkbox"> 优化首页显示方式</li><li><input checked="" disabled="" type="checkbox"> 修复闪退问题</li><li><input disabled="" type="checkbox"> 修复视频卡顿</li></ul></li><li><input disabled="" type="checkbox"> A3项目修复<ul><li><input checked="" disabled="" type="checkbox"> 修复数值错误</li></ul></li></ul><h3 id="html"><a href="#html" class="headerlink" title="html"></a>html</h3><pre><code>&lt;p&gt;这是一个P标签&lt;/p&gt;&lt;button&gt;这是一个button标签&lt;/button&gt;</code></pre><p>这是一个P标签</p><button>这是一个button标签</button><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/02/20/hello-world/"/>
      <url>/2020/02/20/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
