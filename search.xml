<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Mac神器Alfred配置分享</title>
      <link href="/2020/02/23/mac-shen-qi-alfred-pei-zhi-fen-xiang/"/>
      <url>/2020/02/23/mac-shen-qi-alfred-pei-zhi-fen-xiang/</url>
      
        <content type="html"><![CDATA[<h1 id="Mac神器Alfred配置分享"><a href="#Mac神器Alfred配置分享" class="headerlink" title="Mac神器Alfred配置分享"></a>Mac神器Alfred配置分享</h1><p><img src="http://imagebed.solarsunrise.cn/blog/img/20200223014813.png" alt=""></p><h2 id="web-search配置"><a href="#web-search配置" class="headerlink" title="web search配置"></a>web search配置</h2><h2 id="terminal-配置"><a href="#terminal-配置" class="headerlink" title="terminal 配置"></a>terminal 配置</h2><h2 id="workflow分享"><a href="#workflow分享" class="headerlink" title="workflow分享"></a>workflow分享</h2><h2 id="workflow自制"><a href="#workflow自制" class="headerlink" title="workflow自制"></a>workflow自制</h2><ol><li>放弃Python（因为只支持Python2）</li><li>使用shell</li><li>使用Nodejs</li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> Alfred </tag>
            
            <tag> 生产力 </tag>
            
            <tag> 系统插件 </tag>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>配置host文件解决GitHub上图片无法加载的问题</title>
      <link href="/2020/02/22/pei-zhi-host-wen-jian-jie-jue-github-shang-tu-pian-wu-fa-jia-zai-de-wen-ti/"/>
      <url>/2020/02/22/pei-zhi-host-wen-jian-jie-jue-github-shang-tu-pian-wu-fa-jia-zai-de-wen-ti/</url>
      
        <content type="html"><![CDATA[<h1 id="配置host文件解决GitHub上图片无法加载的问题"><a href="#配置host文件解决GitHub上图片无法加载的问题" class="headerlink" title="配置host文件解决GitHub上图片无法加载的问题"></a>配置host文件解决GitHub上图片无法加载的问题</h1><p>最近在登录github网站的时候，发现很多仓库的图片没法加载或者加载速度很慢，加上梯子也不太稳定，所以配置了一下github的hosts，可以加快域名解析<br><a href="https://www.jianshu.com/p/25e5e07b2464" target="_blank" rel="noopener">类似情况</a></p><ol><li>Mac终端输入<br><code>sudo vi /etc/hosts</code></li><li>输入密码后，点击 i键，进入Insert模式，将下面内容拷贝进去<br>```<h1 id="GitHub-Start"><a href="#GitHub-Start" class="headerlink" title="GitHub Start"></a>GitHub Start</h1></li><li>30.253.112    github.com</li><li>30.253.119    gist.github.com</li><li>232.28.133    assets-cdn.github.com</li><li>232.28.133    raw.githubusercontent.com</li><li>232.28.133    gist.githubusercontent.com</li><li>232.28.133    cloud.githubusercontent.com</li><li>232.28.133    camo.githubusercontent.com</li><li>232.28.133    avatars0.githubusercontent.com</li><li>232.28.133    avatars1.githubusercontent.com</li><li>232.28.133    avatars2.githubusercontent.com</li><li>232.28.133    avatars3.githubusercontent.com</li><li>232.28.133    avatars4.githubusercontent.com</li><li>232.28.133    avatars5.githubusercontent.com</li><li>232.28.133    avatars6.githubusercontent.com</li><li>232.28.133    avatars7.githubusercontent.com</li><li>232.28.133    avatars8.githubusercontent.com<h1 id="GitHub-End"><a href="#GitHub-End" class="headerlink" title="GitHub End"></a>GitHub End</h1>```</li><li><code>wq</code> 保存退出即可</li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 采坑 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 采坑 </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用阿里云OSS作为个人图床</title>
      <link href="/2020/02/21/shi-yong-a-li-yun-oss-zuo-wei-ge-ren-tu-chuang/"/>
      <url>/2020/02/21/shi-yong-a-li-yun-oss-zuo-wei-ge-ren-tu-chuang/</url>
      
        <content type="html"><![CDATA[<h1 id="使用阿里云OSS作为个人图床"><a href="#使用阿里云OSS作为个人图床" class="headerlink" title="使用阿里云OSS作为个人图床"></a>使用阿里云OSS作为个人图床</h1><p>使用<strong>Markdown</strong>写博客的时候，有时候会需要插入图片，markdown一般都是插入的本地图片，所以当要分享到网络上，或者上传的github上的时候会失效，解决方法一般是先将本地图片上传到图床上面。</p><p>果是到网页上传，再复制得到图片地址，过程会比较繁琐，好在已经有大神开发出了专门的可视化工具来简化操作——<a href="https://molunerfinn.com/PicGo/" target="_blank" rel="noopener">PicGo</a>，非常好用。本文就是使用阿里云OSS配合PicGo实现图片秒传的体验。</p><h2 id="PicGo界面"><a href="#PicGo界面" class="headerlink" title="PicGo界面"></a>PicGo界面</h2><p><img src="https://cdn.jsdelivr.net/gh/Molunerfinn/test/picgo-site/first.png" alt="picgo界面"></p><h2 id="PicGo支持的图床（还可以通过插件自定义图床）"><a href="#PicGo支持的图床（还可以通过插件自定义图床）" class="headerlink" title="PicGo支持的图床（还可以通过插件自定义图床）"></a>PicGo支持的图床（还可以通过插件自定义图床）</h2><ul><li>SM.MS</li><li><a href="https://cloud.tencent.com/" target="_blank" rel="noopener">腾讯云</a></li><li>微博</li><li><a href="https://www.jianshu.com/p/2756724a5dee" target="_blank" rel="noopener">Github</a></li><li><a href="https://www.qiniu.com/" target="_blank" rel="noopener">七牛</a></li><li><a href="http://www.imgur.com/" target="_blank" rel="noopener">Imgur</a></li><li><a href="https://github.com/PicGo/Awesome-PicGo" target="_blank" rel="noopener">阿里云</a></li><li><a href="https://www.upyun.com/" target="_blank" rel="noopener">又拍云</a></li></ul><blockquote><p>PicGo的相关插件合集 <a href="https://github.com/PicGo/Awesome-PicGo" target="_blank" rel="noopener">Awesome-PicGo</a></p></blockquote><hr><h2 id="使用阿里云OSS作为图床"><a href="#使用阿里云OSS作为图床" class="headerlink" title="使用阿里云OSS作为图床"></a>使用阿里云OSS作为图床</h2><p>先来看看PicGo中阿里云OSS的配置项<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200221233839.png" alt=""><br>通过下面四步我们就可以获得上面这些配置信息</p><ol><li>注册和购买阿里云OSS服务</li><li>新建OSS中的bucket</li><li>获取KeyID和KeySecret</li><li>配置私有域名</li></ol><h3 id="注册和购买阿里云OSS服务"><a href="#注册和购买阿里云OSS服务" class="headerlink" title="注册和购买阿里云OSS服务"></a>注册和购买阿里云OSS服务</h3><h4 id="1-购买阿里OSS"><a href="#1-购买阿里OSS" class="headerlink" title="1. 购买阿里OSS"></a>1. 购买阿里OSS</h4><p>   OSS服务其实很便宜，一年也才几块钱，建议开发者都可以买一个<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200221220754.png" alt=""></p><h4 id="2-新建OSS中的bucket"><a href="#2-新建OSS中的bucket" class="headerlink" title="2. 新建OSS中的bucket"></a>2. 新建OSS中的bucket</h4><p>   bucket相当于是一个一个独立的容器，所以一般一个应用设置一个bucket，比如这里专门建立一个bucket作为图床</p><p><strong>新建bucket</strong><br>bucket名字自己设置，类型选择标准，一定不能错的是读写权限：<strong><em>公共读</em></strong><br>即只有你可以上传文件，其他人仅可以访问和读取<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200221233217.png" alt=""></p><h4 id="3-获取KeyID和KeySecret"><a href="#3-获取KeyID和KeySecret" class="headerlink" title="3. 获取KeyID和KeySecret"></a>3. 获取KeyID和KeySecret</h4><p>   通过key和secret来做身份认证，也就是要填入PicGo中的关键参数，这里需要强调的是，从风险规避的角度，务必在阿里云中应该申请子用户AccessKey，通过子用户赋予这个keyid仅仅操作OSS的权限而不是完整权限的key<br>   <img src="http://imagebed.solarsunrise.cn/blog/img/20200221234114.png" alt=""></p><hr><p><img src="http://imagebed.solarsunrise.cn/blog/img/20200221233839.png" alt="">  </p><blockquote><ul><li>第一项、第二项为第3步生成的keyid和keysecret  </li><li>第三项就是你创建的bucket名称  </li><li>第四项是OSS的存储区域，类似于使用的那个节点，结构一般都是<em>oss-cn-城市</em> 在bucket页面中可以找到</li></ul></blockquote><p>前四项填好之后OSS图床其实已经可以工作了，我们上传一张图片：<br>图片拖动到顶部PicGo图标，等待片刻图片地址以及markdown就会自动放入剪切板，粘贴使用即可<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200221235708.png" alt=""></p><p>剪贴板中信息大概如下：</p><pre><code>![](http://kirahan-blog-photobed.oss-cn-beijing.aliyuncs.com/blog/img/20200221235708.png)</code></pre><h1 id="坑："><a href="#坑：" class="headerlink" title="坑："></a>坑：</h1><p>此时通过图片URL访问，会发现图片无法预览，在浏览器打开图片url会自动下载<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200222000606.png" alt=""><br>出现这种问题不是设置的问题，而是阿里云做的限制<a href="https://help.aliyun.com/document_detail/142631.html" target="_blank" rel="noopener">说明文件</a>，解决方案是配置私有域名</p><blockquote><p>对于图片文件（在未修改文件http头的情况下）：<br>若您的Bucket是2019年9月23日前创建的，使用OSS默认访问域名或自有域名生成的文件URL从浏览器访问时可以预览文件内容。<br>若您的Bucket是2019年9月23日后创建的，使用OSS默认域名生成的文件URL从浏览器访问时会以附件形式下载；使用自有域名生成的文件URL访问时，可以预览文件内容。绑定自有域名步骤请参见绑定自定义域名。<br><a href="https://help.aliyun.com/document_detail/142631.html" target="_blank" rel="noopener">https://help.aliyun.com/document_detail/142631.html</a></p></blockquote><h4 id="4-配置私有域名"><a href="#4-配置私有域名" class="headerlink" title="4. 配置私有域名"></a>4. <a href="https://help.aliyun.com/document_detail/31902.html?spm=a2c4g.11186623.2.11.55207119cNLRuT#concept-ozw-m2r-5fb" target="_blank" rel="noopener">配置私有域名</a></h4><p>绑定自定义域名的前提条件</p><ul><li><input checked="" disabled="" type="checkbox"> 拥有个人域名</li><li><input disabled="" type="checkbox"> 域名已经备案</li></ul><p>配置步骤：</p><ol><li>进入目标Bucket，打开域名管理页签</li><li>单击传输管理 &gt; 域名管理</li><li>在绑定用户域名对话框配置以下参数<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200222001822.png" alt=""></li><li>在域名解析控制台添加对应的解析记录<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200222002012.png" alt=""></li><li>不要忘了在PicGo中填上你的私人域名，这样剪切板中的链接就会变成域名开头的<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200221233839.png" alt=""> </li></ol><hr><p>最后大功告成！可以愉快的写博客了<br><img src="http://imagebed.solarsunrise.cn/blog/img/20200222002455.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 个人工具 </tag>
            
            <tag> 图床 </tag>
            
            <tag> 阿里OSS </tag>
            
            <tag> PicGo </tag>
            
            <tag> 采坑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown 语法备忘</title>
      <link href="/2020/02/21/markdown-yu-fa-bei-wang/"/>
      <url>/2020/02/21/markdown-yu-fa-bei-wang/</url>
      
        <content type="html"><![CDATA[<h1 id="一、标题"><a href="#一、标题" class="headerlink" title="一、标题"></a>一、标题</h1><pre><code># 这是一级标题## 这是二级标题### 这是三级标题#### 这是四级标题##### 这是五级标题###### 这是六级标题</code></pre><h1 id="这是一级标题"><a href="#这是一级标题" class="headerlink" title="这是一级标题"></a>这是一级标题</h1><h2 id="这是二级标题"><a href="#这是二级标题" class="headerlink" title="这是二级标题"></a>这是二级标题</h2><h3 id="这是三级标题"><a href="#这是三级标题" class="headerlink" title="这是三级标题"></a>这是三级标题</h3><h4 id="这是四级标题"><a href="#这是四级标题" class="headerlink" title="这是四级标题"></a>这是四级标题</h4><h5 id="这是五级标题"><a href="#这是五级标题" class="headerlink" title="这是五级标题"></a>这是五级标题</h5><h6 id="这是六级标题"><a href="#这是六级标题" class="headerlink" title="这是六级标题"></a>这是六级标题</h6><h1 id="二、字体"><a href="#二、字体" class="headerlink" title="二、字体"></a>二、字体</h1><pre><code>**这是加粗的文字***这是倾斜的文字*`***这是斜体加粗的文字***~~这是加删除线的文字~~</code></pre><p><strong>这是加粗的文字</strong><br><em>这是倾斜的文字</em>`<br><strong><em>这是斜体加粗的文字</em></strong><br><del>这是加删除线的文字</del>  </p><h1 id="三、引用"><a href="#三、引用" class="headerlink" title="三、引用"></a>三、引用</h1><pre><code>&gt;这是引用的内容&gt;&gt;这是引用的内容&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;这是引用的内容</code></pre><blockquote><p>这是引用的内容</p><blockquote><p>这是引用的内容</p><blockquote><blockquote><p>这是引用的内容</p></blockquote></blockquote></blockquote></blockquote><h1 id="四、分割线"><a href="#四、分割线" class="headerlink" title="四、分割线"></a>四、分割线</h1><pre><code>---***</code></pre><hr><hr><h1 id="四、链接、列表-、图片等"><a href="#四、链接、列表-、图片等" class="headerlink" title="四、链接、列表 、图片等"></a>四、链接、列表 、图片等</h1><h3 id="link"><a href="#link" class="headerlink" title="link"></a>link</h3><pre><code>[超链接名](超链接地址 "超链接title")title可加可不加</code></pre><p><a href="www.baidu.com">百度</a>  </p><p>参考式</p><pre><code>我经常去的几个网站[GitHub][1]、[知乎][2]以及[简书][3][简书][3]是一个不错的[写作社区][]。[1]:https://github.com "GitHub"[2]:https://www.zhihu.com "知乎"[3]:http://www.jianshu.com "简书"[写作社区]:http://www.jianshu.com</code></pre><p>我经常去的几个网站<a href="https://github.com" target="_blank" rel="noopener" title="GitHub">GitHub</a>、<a href="https://www.zhihu.com" target="_blank" rel="noopener" title="知乎">知乎</a>以及<a href="http://www.jianshu.com" target="_blank" rel="noopener" title="简书">简书</a><br><a href="http://www.jianshu.com" target="_blank" rel="noopener" title="简书">简书</a>是一个不错的<a href="http://www.jianshu.com" target="_blank" rel="noopener">写作社区</a>。</p><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><pre><code> ![图片Alt](图片地址 "图片Title")![](https://kirahan-blog-photobed.oss-cn-beijing.aliyuncs.com/blog/img/赵晗-183.jpg) 参考式 在文档要插入图片的地方写![图片Alt][标记] 在文档的最后写上[标记]:图片地址 "Title"</code></pre><p><img src="http://imagebed.solarsunrise.cn/blog/img/timg.jpeg" alt=""></p><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><pre><code>- 列表内容+ 列表内容* 列表内容注意：- + * 跟内容之间都要有一个空格</code></pre><ul><li>你好</li><li>你好不好</li><li>你是不是真的好</li></ul><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><pre><code>1.列表内容2.列表内容3.列表内容注意：序号跟内容之间要有空格</code></pre><ol><li>多福多寿</li><li>房价快速的减肥</li><li>划分为UI偶然间可</li></ol><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><pre><code>姓名|技能|排行--|:--:|--:刘备|哭|大哥关羽|打|二哥张飞|骂|三弟</code></pre><table><thead><tr><th>姓名</th><th align="center">技能</th><th align="right">排行</th></tr></thead><tbody><tr><td>刘备</td><td align="center">哭</td><td align="right">大哥</td></tr><tr><td>关羽</td><td align="center">打</td><td align="right">二哥</td></tr><tr><td>张飞</td><td align="center">骂</td><td align="right">三弟</td></tr></tbody></table><h3 id="code"><a href="#code" class="headerlink" title="code"></a>code</h3><pre><code>`code`</code></pre><pre><code>    ```        code    ```</code></pre><h3 id="todo-list"><a href="#todo-list" class="headerlink" title="todo list"></a>todo list</h3><pre><code>近期任务安排:- [x] 整理Markdown手册- [ ] 改善项目   - [x] 优化首页显示方式   - [x] 修复闪退问题   - [ ] 修复视频卡顿- [ ] A3项目修复   - [x] 修复数值错误</code></pre><p>近期任务安排:</p><ul><li><input checked="" disabled="" type="checkbox"> 整理Markdown手册</li><li><input disabled="" type="checkbox"> 改善项目<ul><li><input checked="" disabled="" type="checkbox"> 优化首页显示方式</li><li><input checked="" disabled="" type="checkbox"> 修复闪退问题</li><li><input disabled="" type="checkbox"> 修复视频卡顿</li></ul></li><li><input disabled="" type="checkbox"> A3项目修复<ul><li><input checked="" disabled="" type="checkbox"> 修复数值错误</li></ul></li></ul><h3 id="html"><a href="#html" class="headerlink" title="html"></a>html</h3><pre><code>&lt;p&gt;这是一个P标签&lt;/p&gt;&lt;button&gt;这是一个button标签&lt;/button&gt;</code></pre><p>这是一个P标签</p><button>这是一个button标签</button><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/02/20/hello-world/"/>
      <url>/2020/02/20/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
